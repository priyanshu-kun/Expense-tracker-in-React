[{"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\index.js":"1","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\App.js":"2","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Details\\Details.jsx":"3","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Details\\detailsStyle.js":"4","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\appStyles.js":"5","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Main.jsx":"6","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\mainStyles.js":"7","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Form\\form.jsx":"8","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Form\\formStyles.js":"9","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Form\\Form.jsx":"10","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\List\\List.jsx":"11","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\List\\listStyle.js":"12","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\context\\state.context.js":"13","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\context\\contextReducer.js":"14","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\constants\\categories.js":"15","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\utils\\formatDate.js":"16","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\useTransactions.js":"17","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Snackbar\\Snackbar.jsx":"18","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Snackbar\\snackbarStyles.js":"19","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\InfoCard.jsx":"20"},{"size":473,"mtime":1608724159433,"results":"21","hashOfConfig":"22"},{"size":1161,"mtime":1608736162679,"results":"23","hashOfConfig":"22"},{"size":682,"mtime":1608704725176,"results":"24","hashOfConfig":"22"},{"size":413,"mtime":1608637399925,"results":"25","hashOfConfig":"22"},{"size":678,"mtime":1608627129845,"results":"26","hashOfConfig":"22"},{"size":1816,"mtime":1608743117647,"results":"27","hashOfConfig":"22"},{"size":836,"mtime":1608705847043,"results":"28","hashOfConfig":"22"},{"size":1403,"mtime":1608631099273,"results":"29","hashOfConfig":"22"},{"size":509,"mtime":1608704985150,"results":"30","hashOfConfig":"22"},{"size":5464,"mtime":1608733457778,"results":"31","hashOfConfig":"22"},{"size":1652,"mtime":1608702699028,"results":"32","hashOfConfig":"22"},{"size":848,"mtime":1608705271713,"results":"33","hashOfConfig":"22"},{"size":1213,"mtime":1608734749678,"results":"34","hashOfConfig":"22"},{"size":758,"mtime":1608728588225,"results":"35","hashOfConfig":"22"},{"size":1691,"mtime":1608701128094,"results":"36","hashOfConfig":"22"},{"size":374,"mtime":1608702183768,"results":"37","hashOfConfig":"22"},{"size":1232,"mtime":1608711163639,"results":"38","hashOfConfig":"22"},{"size":909,"mtime":1608733898902,"results":"39","hashOfConfig":"22"},{"size":226,"mtime":1608732141858,"results":"40","hashOfConfig":"22"},{"size":458,"mtime":1608734515197,"results":"41","hashOfConfig":"22"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"14d1g4d",{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"57","messages":"58","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63","usedDeprecatedRules":"44"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"44"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"44"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"44"},"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\index.js",[],["86","87"],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\App.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Details\\Details.jsx",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Details\\detailsStyle.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\appStyles.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Main.jsx",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\mainStyles.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Form\\form.jsx",["88"],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Form\\formStyles.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\Form\\Form.jsx",["89"],"import React, { useState, useEffect, useContext } from 'react';\r\nimport { ExpenseTrackerContext } from '../../../context/state.context';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport {\r\n  TextField,\r\n  Typography,\r\n  Grid,\r\n  Button,\r\n  FormControl,\r\n  InputLabel,\r\n  Select,\r\n  MenuItem,\r\n} from '@material-ui/core';\r\nimport useStyles from './formStyles';\r\nimport {\r\n  incomeCategories,\r\n  expenseCategories,\r\n} from '../../../constants/categories';\r\nimport formatDate from '../../../utils/formatDate';\r\nimport { useSpeechContext } from '@speechly/react-client';\r\nimport CustomizeSnackbar from '../../Snackbar/Snackbar';\r\n\r\nconst initialFormState = {\r\n  amount: '',\r\n  category: '',\r\n  type: 'Income',\r\n  date: formatDate(new Date()),\r\n};\r\n\r\nfunction Form() {\r\n  const classes = useStyles();\r\n  const [initialState, setInitialState] = useState(initialFormState);\r\n  const { addTransaction } = useContext(ExpenseTrackerContext);\r\n  const { segment } = useSpeechContext();\r\n  const [open, setOpen] = useState(false);\r\n\r\n  const selectedCategories =\r\n    initialState.type === 'Income' ? incomeCategories : expenseCategories;\r\n\r\n  const handleCreateButtonClick = () => {\r\n    if (\r\n      Number.isNaN(Number(initialState.amount)) ||\r\n      !initialState.date.includes('-')\r\n    )\r\n      return;\r\n    // alert('Create transaction');\r\n    setOpen(true);\r\n    const transaction = {\r\n      ...initialState,\r\n      amount: Number(initialState.amount),\r\n      id: uuidv4(),\r\n    };\r\n    addTransaction(transaction);\r\n    setInitialState(initialFormState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (segment) {\r\n      if (segment.intent.intent === 'add_expense') {\r\n        setInitialState({ ...initialState, type: 'Expense' });\r\n      } else if (segment.intent.intent === 'add_income') {\r\n        setInitialState({ ...initialState, type: 'Income' });\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === 'create_transaction'\r\n      ) {\r\n        return handleCreateButtonClick();\r\n      } else if (\r\n        segment.isFinal &&\r\n        segment.intent.intent === 'cancel_transaction'\r\n      ) {\r\n        return setInitialState(initialFormState);\r\n      }\r\n\r\n      segment.entities.forEach((e) => {\r\n        const category = `${e.value.charAt(0)}${e.value\r\n          .slice(1)\r\n          .toLowerCase()}`;\r\n        switch (e.type) {\r\n          case 'amount':\r\n            setInitialState({ ...initialState, amount: e.value });\r\n            break;\r\n          case 'category':\r\n            if (incomeCategories.map((iC) => iC.type).includes(category)) {\r\n              setInitialState({ ...initialState, type: 'Income', category });\r\n            } else if (\r\n              expenseCategories.map((iC) => iC.type).includes(category)\r\n            ) {\r\n              setInitialState({ ...initialState, type: 'Expense', category });\r\n            }\r\n            break;\r\n          case 'date':\r\n            setInitialState({ ...initialState, date: e.value });\r\n            break;\r\n          default:\r\n            break;\r\n        }\r\n      });\r\n\r\n      if (\r\n        segment.isFinal &&\r\n        initialState.amount &&\r\n        initialState.category &&\r\n        initialState.type\r\n      ) {\r\n        handleCreateButtonClick();\r\n      }\r\n    }\r\n  }, [segment]);\r\n\r\n  return (\r\n    <Grid container spacing={2}>\r\n      <CustomizeSnackbar open={open} setOpen={setOpen} />\r\n      <Grid item xs={12}>\r\n        <Typography align=\"center\" variant=\"subtitle2\" gutterBottom>\r\n          {segment && <>{segment.words.map((w) => w.value).join(' ')}</>}\r\n        </Typography>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Type</InputLabel>\r\n          <Select\r\n            value={initialState.type}\r\n            onChange={(e) => {\r\n              setInitialState({ ...initialState, type: e.target.value });\r\n            }}\r\n          >\r\n            <MenuItem value=\"Income\">Income</MenuItem>\r\n            <MenuItem value=\"Expense\">Expense</MenuItem>\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <FormControl fullWidth>\r\n          <InputLabel>Category</InputLabel>\r\n          <Select\r\n            value={initialState.category}\r\n            onChange={(e) => {\r\n              setInitialState({ ...initialState, category: e.target.value });\r\n            }}\r\n          >\r\n            {selectedCategories.map((c) => (\r\n              <MenuItem key={c.type} value={c.type}>\r\n                {c.type}\r\n              </MenuItem>\r\n            ))}\r\n          </Select>\r\n        </FormControl>\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          value={initialState.amount}\r\n          onChange={(e) => {\r\n            setInitialState({ ...initialState, amount: e.target.value });\r\n          }}\r\n          type=\"number\"\r\n          label=\"amount\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Grid item xs={6}>\r\n        <TextField\r\n          value={initialState.date}\r\n          onChange={(e) => {\r\n            setInitialState({\r\n              ...initialState,\r\n              date: formatDate(e.target.value),\r\n            });\r\n          }}\r\n          type=\"date\"\r\n          label=\"date\"\r\n          fullWidth\r\n        />\r\n      </Grid>\r\n      <Button\r\n        className={classes.button}\r\n        color=\"primary\"\r\n        fullWidth\r\n        onClick={handleCreateButtonClick}\r\n      >\r\n        Create\r\n      </Button>\r\n    </Grid>\r\n  );\r\n}\r\n\r\nexport default Form;\r\n","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\List\\List.jsx",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Main\\List\\listStyle.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\context\\state.context.js",["90"],"// import transitions from \"@material-ui/core/styles/transitions\";\r\nimport React, { useReducer, createContext } from \"react\";\r\nimport ContextReducer from \"./contextReducer\";\r\nconst initialState = JSON.parse(localStorage.getItem('transactions')) || [];\r\n\r\nexport const ExpenseTrackerContext = createContext(initialState);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n\r\n    const [transactions, dispatch] = useReducer(ContextReducer, initialState);\r\n\r\n    console.log(transactions);\r\n\r\n    // Action Creators\r\n    const deleteTransaction = (id) => {\r\n        dispatch({ type: 'DELETE_TRANSACTION', payload: id })\r\n    }\r\n\r\n    const addTransaction = (transaction) => {\r\n        dispatch({ type: 'ADD_TRANSACTION', payload: transaction })\r\n    }\r\n\r\n    const Balance = transactions.reduce((accu, crrVal) => {\r\n        return (crrVal.type === \"Expense\" ? accu - crrVal.amount : accu + crrVal.amount)\r\n    }, 0)\r\n\r\n    console.log(Balance)\r\n\r\n    return (\r\n        <ExpenseTrackerContext.Provider value={{\r\n            deleteTransaction,\r\n            addTransaction,\r\n            transactions,\r\n            Balance\r\n        }}>\r\n            {children}\r\n        </ExpenseTrackerContext.Provider>\r\n    )\r\n}\r\n\r\n","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\context\\contextReducer.js",["91"],"import transitions from \"@material-ui/core/styles/transitions\";\r\n\r\nexport default function ContextReducer(state, action) {\r\n    let transactions;\r\n    switch (action.type) {\r\n        case 'DELETE_TRANSACTION':\r\n            // alert(\"Delete\");\r\n            transactions = state.filter((t) => {\r\n                return t.id !== action.payload\r\n            })\r\n            localStorage.setItem(\"transactions\", JSON.stringify(transactions))\r\n            return transactions;\r\n        case 'ADD_TRANSACTION':\r\n            // alert(\"Add\");\r\n            transactions = [action.payload, ...state];\r\n            localStorage.setItem(\"transactions\", JSON.stringify(transactions))\r\n            return transactions;\r\n        default:\r\n            return state;\r\n    }\r\n}","F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\constants\\categories.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\utils\\formatDate.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\useTransactions.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Snackbar\\Snackbar.jsx",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\Snackbar\\snackbarStyles.js",[],"F:\\portfolio projects\\Expense tracker\\expense-tracker\\src\\components\\InfoCard.jsx",[],{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","replacedBy":"95"},{"ruleId":"96","severity":2,"message":"97","line":15,"column":19,"nodeType":"98","endLine":15,"endColumn":28},{"ruleId":"99","severity":1,"message":"100","line":109,"column":6,"nodeType":"101","endLine":109,"endColumn":15,"suggestions":"102"},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"98","messageId":"105","endLine":1,"endColumn":19},{"ruleId":"103","severity":1,"message":"104","line":1,"column":8,"nodeType":"98","messageId":"105","endLine":1,"endColumn":19},"no-native-reassign",["106"],"no-negated-in-lhs",["107"],"react-hooks/rules-of-hooks","React Hook \"useStyles\" is called in function \"form\" that is neither a React function component nor a custom React Hook function. React component names must start with an uppercase letter.","Identifier","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'handleCreateButtonClick' and 'initialState'. Either include them or remove the dependency array. You can also do a functional update 'setInitialState(i => ...)' if you only need 'initialState' in the 'setInitialState' call.","ArrayExpression",["108"],"no-unused-vars","'transitions' is defined but never used.","unusedVar","no-global-assign","no-unsafe-negation",{"desc":"109","fix":"110"},"Update the dependencies array to be: [handleCreateButtonClick, initialState, segment]",{"range":"111","text":"112"},[3250,3259],"[handleCreateButtonClick, initialState, segment]"]